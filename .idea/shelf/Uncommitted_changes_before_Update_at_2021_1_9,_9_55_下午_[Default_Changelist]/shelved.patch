Index: src/Easy/Solution118.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Easy;\n\nimport java.util.List;\n\n/**\n * Title:\n *\n * @author suyuelai\n * @version V1.0\n * @date 2021/1/9 6:12 下午\n * Description:\n */\npublic class Solution118 {\n    public List<List<Integer>> generate(int numRows) {\n        \n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Easy/Solution118.java	(revision 0c0da14676fbbb87f27ea472a9d88160dbb4d743)
+++ src/Easy/Solution118.java	(date 1610197549983)
@@ -11,8 +11,6 @@
  * Description:
  */
 public class Solution118 {
-    public List<List<Integer>> generate(int numRows) {
-        
-    }
+
 
 }
Index: test/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>class Solution {\r\n    void dfs(char[][] grid, int r, int c) {\r\n        int nr = grid.length;\r\n        int nc = grid[0].length;\r\n\r\n        if (r < 0 || c < 0 || r >= nr || c >= nc || grid[r][c] == '0') {\r\n            return;\r\n        }\r\n\r\n        grid[r][c] = '0';\r\n        dfs(grid, r - 1, c);\r\n        dfs(grid, r + 1, c);\r\n        dfs(grid, r, c - 1);\r\n        dfs(grid, r, c + 1);\r\n    }\r\n\r\n    public int numIslands(char[][] grid) {\r\n        if (grid == null || grid.length == 0) {\r\n            return 0;\r\n        }\r\n\r\n        int gx = grid.length;\r\n        int gy = grid[0].length;\r\n        int num_islands = 0;\r\n        for (int x = 0; x < gx; ++x) {\r\n            for (int y = 0; y < gy; ++y) {\r\n                if (grid[x][y] == '1') {\r\n                    ++num_islands;\r\n                    dfs(grid, x, y);\r\n                }\r\n            }\r\n        }\r\n\r\n        return num_islands;\r\n    }\r\n    public static void main(String[] args) {\r\n        System.out.println(b'\\xe6\\x88\\x91\\xe7\\x88\\xb1\\xe4\\xbd\\xa0'.decode('utf-8'));\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- test/Solution.java	(revision 0c0da14676fbbb87f27ea472a9d88160dbb4d743)
+++ test/Solution.java	(date 1610197549987)
@@ -1,39 +1,5 @@
 class Solution {
-    void dfs(char[][] grid, int r, int c) {
-        int nr = grid.length;
-        int nc = grid[0].length;
-
-        if (r < 0 || c < 0 || r >= nr || c >= nc || grid[r][c] == '0') {
-            return;
-        }
-
-        grid[r][c] = '0';
-        dfs(grid, r - 1, c);
-        dfs(grid, r + 1, c);
-        dfs(grid, r, c - 1);
-        dfs(grid, r, c + 1);
-    }
-
-    public int numIslands(char[][] grid) {
-        if (grid == null || grid.length == 0) {
-            return 0;
-        }
-
-        int gx = grid.length;
-        int gy = grid[0].length;
-        int num_islands = 0;
-        for (int x = 0; x < gx; ++x) {
-            for (int y = 0; y < gy; ++y) {
-                if (grid[x][y] == '1') {
-                    ++num_islands;
-                    dfs(grid, x, y);
-                }
-            }
-        }
-
-        return num_islands;
-    }
     public static void main(String[] args) {
-        System.out.println(b'\xe6\x88\x91\xe7\x88\xb1\xe4\xbd\xa0'.decode('utf-8'));
+        DistributeClient
     }
 }
